{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Tools for Experiments Overview"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This notebook is aiming to broadly introduce all the major components of the toolsforexperiments suite.\n",
    "the document is currently still work in progress, but already a decent starting point for a few things.\n",
    "\n",
    "- Prerequisites: \n",
    "  - you should know the qcodes basics\n",
    "  - have a look at the 'dummy_measurement_without_server' example before"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Imports\n",
    "\n",
    "We need to have some common packages installed, and also need qcodes and plottr.\n",
    "Refer to the official qcodes documentation for how to set up the right environment.\n",
    "\n",
    "Plottr can be installed from pip or conda, or from github.\n",
    "\n",
    "instrumentserver needs to be installed from github (and preferably using `pip install -e`)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pprint import pprint\n",
    "import time\n",
    "\n",
    "import numpy as np\n",
    "from matplotlib import pyplot as plt\n",
    "import h5py\n",
    "\n",
    "from qcodes import Instrument, Station, find_or_create_instrument\n",
    "from plottr.data import datadict_storage as dds, datadict as dd\n",
    "\n",
    "\n",
    "from labcore.measurement import *\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The instrument server"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The role of the instrument server is to manage access to instruments (both real and virtual), so they can be used from multiple processes. \n",
    "It's not strictly necessary to use it, and its designed such that using instruments through the server can be used also to talk to instruments that are instantiated directly.\n",
    "\n",
    "Start the instrumentserver from the commandline (in an env't that has qcodes and the instrumentserver package installed) in a directory that will be the working directory for the server.\n",
    "\n",
    "```bash\n",
    "    $ instrumentserver --gui True\n",
    "```\n",
    "\n",
    "Because no instruments are instantiated at this point, we get an empty window reflecting the blank qcodes station living inside the server.\n",
    "We can already create a client in this notebook that connects to the instrumentserver:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "from instrumentserver.client import Client as InstrumentClient\n",
    "cli = InstrumentClient() # connect to default host (localhost) and default port (5555)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will now see how we can make use of the fact that we can talk to the instrumentserver from multiple processes. \n",
    "We'll create a virtual instrument (something with no direct counterpart on the hardware side) that allows us to manage arbitrary experiment parameters that we can access across the setup (a fancy way to keep track of important variables). After that, we'll set up some dummy instruments and perform some fake data acquisition with them."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Parameter manager\n",
    "\n",
    "We'll first launch the *parameter manager*. Because it has a dedicated GUI we run it as a standalone program. \n",
    "From a command line prompt we can launch it separately (again, make sure to do this within an env't that has the instrumentserver package installed):\n",
    "\n",
    "```bash\n",
    "    $ instrumentserver-param-manager\n",
    "```\n",
    "\n",
    "We'll simply get an empty window now.\n",
    "The bottom of the window allows us to add arbitrary parameters and values, where dots serve as hierarchy separators (like objects and their children in python).\n",
    "Let's add a few parameters, let's say `qubit.frequency`, `qubit.pipulse.len`, `qubit.pipulse.amp` and give them some arbitrary values.\n",
    "We'll see something like this:\n",
    "\n",
    "![Parameter manager window](figures/parammgr.png)\n",
    "\n",
    "Because parameters live in the instrumentserver we can access the values here by creating a 'Proxy' instrument that forwards all requests to the 'real' instrument."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "40"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "params = cli.get_instrument('parameter_manager') # 'parameter-=_manager' is the name the startup script gives the instrument by default\n",
    "\n",
    "# simply output the value of the pi pulse length:\n",
    "params.qubit.pipulse.len()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The different clients (such as the one in the notebook kernel and the one of the GUI) should stay in sync automatically.\n",
    "If we update a value from there, the GUI will display the change right away.\n",
    "In turn, calling a parameter get function should always return the most recent value the server has."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "# after executing, the change is immediately visible in the GUI.\n",
    "params.qubit.pipulse.len(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# if we change the value in the GUI, this will return the new value.\n",
    "params.qubit.pipulse.len()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The same goes for adding new parameters after all clients are connected.\n",
    "We can add new parameters very easily from any client.\n",
    "The GUI should update automatically once we add something here."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "# this will only be available in the GUI after pressing the refresh button.\n",
    "params.add_parameter('qubit.anharmonicity', initial_value=-150.0, unit='MHz')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we add a parameter in the instrument GUI (let's say: `resonator.frequency`), we can immediately access it from within the notebook.\n",
    "Note, however, that autocomplete will not work right away (the client in the notebook needs to refresh, which only happens once we try to execute the command)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'ProxyInstrumentModule' object and its delegates have no attribute 'resonator'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_15664/1897080992.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mparams\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresonator\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfrequency\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32mc:\\users\\msmt\\documents\\github\\instrumentserver\\instrumentserver\\client\\proxy.py\u001b[0m in \u001b[0;36m__getattr__\u001b[1;34m(self, item)\u001b[0m\n\u001b[0;32m    337\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mitem\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    338\u001b[0m             \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 339\u001b[1;33m                 \u001b[1;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    340\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    341\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mc:\\users\\msmt\\documents\\github\\instrumentserver\\instrumentserver\\client\\proxy.py\u001b[0m in \u001b[0;36m__getattr__\u001b[1;34m(self, item)\u001b[0m\n\u001b[0;32m    325\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__getattr__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mitem\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    326\u001b[0m         \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 327\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__getattr__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mitem\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    328\u001b[0m         \u001b[1;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    329\u001b[0m             \u001b[0mcurrent_bp\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcli\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mgetBluePrint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mremotePath\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Miniconda3\\envs\\qcodes\\lib\\site-packages\\qcodes\\utils\\helpers.py\u001b[0m in \u001b[0;36m__getattr__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m    432\u001b[0m                 \u001b[1;32mpass\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    433\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 434\u001b[1;33m         raise AttributeError(\n\u001b[0m\u001b[0;32m    435\u001b[0m             \"'{}' object and its delegates have no attribute '{}'\".format(\n\u001b[0;32m    436\u001b[0m                 self.__class__.__name__, key))\n",
      "\u001b[1;31mAttributeError\u001b[0m: 'ProxyInstrumentModule' object and its delegates have no attribute 'resonator'"
     ]
    }
   ],
   "source": [
    "params.resonator.frequency()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also remove parameters directly from the code:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "params.remove_parameter('qubit.pipulse.len')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After runnning this line we can see that the paremeter disappeared from the parameter manager."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Adding instruments to the server"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When using 'vanilla' qcodes, we would simply create a qcodes station in our working kernel, then add instruments by instantiating the corresponding driver classes.\n",
    "When using the instrumentserver to manage our instrument instances, we instead want to instantiate inside the station that the server runs.\n",
    "\n",
    "As an example, we will add a dummy instrument that behaves like a vector network analyzer and simulates a resonator response.\n",
    "Only the server will instantiate it, so instead of importing the driver, we pass the import path (of course, needs to be known in the environment that the server is running in)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "vna = cli.create_instrument(\n",
    "    'instrumentserver.testing.dummy_instruments.rf.ResonatorResponse', # the path to the driver; must be importable for the server program.\n",
    "    'vna',  # this is the name of the instrument in the server station\n",
    "    f0=6.789e9,  # the resonance frequency of the mock resonator\n",
    "    df=10e6,  # the linewidth\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# setting some reasonable values\n",
    "vna.start_frequency(6.089e9)\n",
    "vna.stop_frequency(7.089e9)\n",
    "vna.npoints(1201)\n",
    "vna.bandwidth(1e4)\n",
    "vna.power(-50)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Using the parameter manager in measurements\n",
    "\n",
    "Refer to [measurement_notebook](https://github.com/toolsforexperiments/recipes/blob/master/dummy_measurement_without_server/measurement_notebook.ipynb) for a more in depth guide example of the measurement we are taking. \n",
    "\n",
    "The idea here is simple: by using parameters from the parameter manager we don't need to store configuration variables in measurement scripts, and can run functions using user-changeable parameters without having to pass variables. \n",
    "We illustrate this with an artificial, but also not too unrealistic dummy case: \n",
    "Assume we often want to sweep a flux (for instance for tuning a resonator) a small range around a given setpoint that can change.\n",
    "Not having to keep track of that setpoint throughout scripts can make life a bit easier (and will hopefully lead to fewer mistakes).\n",
    "\n",
    "First, lets instantiate the virtual flux controller, and define the measurement function:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "fluxctrl = cli.create_instrument(\n",
    "    instrument_class='instrumentserver.testing.dummy_instruments.rf.FluxControl',\n",
    "    name='fluxctrl',\n",
    "    resonator_instrument='vna'\n",
    ")\n",
    "\n",
    "def sweep_flux(sweep_range=0.5, nsteps=51):\n",
    "    flux, frequency, s11 = [], [], []\n",
    "    \n",
    "    vna.resonator_linewidth(10e6)\n",
    "    vna.resonator_frequency(params.resonator.frequency() * 1e9)\n",
    "    f0 = params.resonator.flux()-sweep_range/2.\n",
    "    f1 = params.resonator.flux()+sweep_range/2.\n",
    "    for f in np.linspace(f0, f1, nsteps):\n",
    "        fluxctrl.flux(f)\n",
    "        flux.append(f)\n",
    "        frequency.append(vna.frequency())\n",
    "        s11.append(vna.data())\n",
    "\n",
    "    fig, ax = plt.subplots(1, 1, constrained_layout=True)\n",
    "    ax.imshow(np.angle(np.array(s11)), aspect='auto', origin='lower', \n",
    "              extent=[frequency[0].min(), frequency[0].max(), f0, f1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's add the parameter we want to control, ``resonator.flux``, via the GUI.\n",
    "After that we can measure by setting parameters in the GUI, rather than typing them explicitly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# change resonator frequency or flux in the gui, and re-run to see the change.\n",
    "sweep_flux()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It is of course clear that in such a simple experiment the Parameter Manager GUI provides only a limited amount of benefit.\n",
    "However, once parameters are used across many different measurements, it can be very convenient to have it act as the central \"single source of truth\"."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Saving and recalling the state of the setup"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Saving all current parameters in the instrumentserver to a file:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "cli.paramsToFile('parameters.json')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also save the state by pressing the `Save to file` button in the top left of server GUI. \n",
    "We can also utilize the `Save parameters to file` button from the parameter manager GUI to only save the parameters of the manager and not the entire state of the station.\n",
    "\n",
    "By default `paramsToFile` saves only the name and value of a parameter, but we can also save units, for example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "cli.paramsToFile('parameters-with-units.json', instrument='parameter_manager', attrs=['value', 'unit'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Loading works similar:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "cli.paramsFromFile('parameters.json')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can save and recall also from the GUI.\n",
    "The instrumentserver GUI allows saving/loading the state of all instruments using a default file in the working directory (``parameters.json``).\n",
    "For more control we can use the API as shown above.\n",
    "\n",
    "In addition, the parameter manager GUI also allows saving/restoring all its parameters from the GUI. It saves to a separate file in the current working directory from where the parameter manager was launched (``parameter_manager-<name_of_instrument>.json``) and includes the units."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Logger and Dashboard\n",
    "\n",
    "Mention the logger and dashboard and what do they do and link to their particular guide"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plottr: data management and inspection"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Work in progress :)\n",
    "\n",
    "\n",
    "For now, please check these resources:\n",
    "\n",
    "* [Simple Measurement example](https://github.com/toolsforexperiments/recipes/blob/master/dummy_measurement_without_server/measurement_notebook.ipynb) - \"dummy_measurement_without_server\" example notebook\n",
    "* [Using plottr with qcodes](https://qcodes.github.io/Qcodes/examples/plotting/How-to-use-Plottr-with-QCoDeS-for-live-plotting.html)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### General introduction\n",
    "\n",
    "What plottr is and what does it do\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Simple Example on how to save data\n",
    "\n",
    "In the following example we show to firstly declare the structure and metadata of the ``DataDict``, in this case we have two independent variabels (`x` and `y`) and a dependent variable (`z`) that depends on both of them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data location:  ./data\\2021-08-24\\2021-08-24T145522_37baa9c5-Example data\\data.ddh5\n"
     ]
    }
   ],
   "source": [
    "# Declaring the structure of the DataDict.\n",
    "data = dd.DataDict(\n",
    "    x = dict(unit='A'),\n",
    "    y = dict(unit='B'),\n",
    "    z = dict(axes=['x', 'y']),\n",
    ")\n",
    "\n",
    "# We declare a few parameters used in the measurement\n",
    "nrows = 100\n",
    "file_name = \"Example data\"\n",
    "DATADIR = './data'\n",
    "\n",
    "# we start the context manager.\n",
    "with dds.DDH5Writer(basedir=DATADIR, datadict=data, name=file_name) as writer:\n",
    "    for n in range(nrows):\n",
    "        writer.add_data(x=[n], \n",
    "                        y=np.linspace(0,1,11).reshape(1,-1),\n",
    "                        z=np.random.rand(11).reshape(1,-1)\n",
    "                        )\n",
    "        time.sleep(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### How to open and plot data.\n",
    "\n",
    "Running the command,\n",
    "\n",
    "```bash\n",
    "    $ plottr-monitr .\\data\n",
    "```\n",
    "\n",
    "opens the monitr window inside the newly created data folder.Inside we can find all of the different measurements that are stored there labeled by day. If we go through the folder tree up to the DDH5 file created by the previous meausrement, on the right we will be able to see the metadata, which variable depends on what, the nuber of datapoints for each, etc) of our stored data.\n",
    "\n",
    "![Monitr main window](figures/monitr_menu.png)\n",
    "\n",
    "Doing a right click on data in the right window will open a popup saying \"Plot data\". \n",
    "\n",
    "![Selecting plot data](figures/selecting_plot_data.png)\n",
    "\n",
    "By clicking on it, a new inspectr window opens up with a plot of the selected data. The window is by defualt divided into three different section. Bottom one being the plotted data. In it we can move around the data and zoom in and out of it. In the data selection window (top left) we can select which variable we want to plot in the case we have multiple variables in a single DDH5 file. In the dimension assignment window (top right) we can indicate what the independent varaibles should be in the plot (x or y axis, if we want them averaged, if we want to select a specific one, etc.).\n",
    "\n",
    "![Inspectr window](figures/inspectr.png)\n",
    "\n",
    "\n",
    "### How to view real time data.\n",
    "\n",
    "To plot real time data we simply need to open the DDH5 file while the measurement is being executed and inspctr will update periodically every two seconds (you can specify this inverval of time in the 'Refresh interval' textbox in the toolbar.\n",
    "\n",
    "### Nodes and Flowcharts\n",
    "\n",
    "More advanced functionality for plottr can be created to spcify and automate analisys of data. To learn how to utilize it visit the [plottr documentation](../../../plottr/concepts/nodes.rst).\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Labcore: tools for increasing efficiency.\n",
    "\n",
    "### What is a sweep.\n",
    "\n",
    "This is a very simple overview of what labcore does, for more information see [Sweep introduction](../../labcore/Introduction_to_sweeping.ipynb).\n",
    "\n",
    "Labcore is a tool that allows us to build end execute measurments in a simple and modular way. It does this by constructing a software object, the sweep, before anything gets executed. The sweep containes all the instructions on what to do and the structure of the data coming out it. This way one can plan and get information out of this object before anything happens. The construction of these sweep objects are extremely modular and flexible, allowing for an easy way re-using older code for specific tasks.\n",
    "\n",
    "A sweep is an iterable, where each step in the iteration the sweep performs an action and returns some data, this data is in the form of a python dictionary and we call it **record**. \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### How to construct and run a simple sweep.\n",
    "\n",
    "we construct a sweep out of parameters we want to sweep through and actions (usually functions) that need to happen in the measurement. This functions need to be annotated at some point to indicate what is the data that they produce. This can be done either by adding the decorator [recording](../../../api/labcore/measurement/record.rst#labcore.measurement.record.recording) to a function that generates data or using the method [record_as](../../../api/labcore/measurement/record.rst#labcore.measurement.record.record_as) when creating the sweep object.\n",
    "\n",
    "In the following example we create a very simple sweep. Here we seep through the first item in the Sweep, (a veriable going from 0 to 4 created by the range funciton), and we first call func_1 passing the value of the variable as an arguement followed by func_2 again using the same value of the variable as an argument. For demonstration porpuses we use both the recording decorator and the record_as method to record the variables comming out of the functions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "@recording(\n",
    "    independent('x', type='scalar', unit='')\n",
    ")\n",
    "def func_1(i):\n",
    "    return i+1\n",
    "\n",
    "def func_2(i):\n",
    "    return i*2\n",
    "\n",
    "sweep_object = Sweep(range(5), func_1, record_as(func_2, 'y'))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can print the sweep object to see what it will do as well as seeing what data is going to generate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "range(0, 5) >> func_1(i) as {x} >> func_2(i) as {y}\n",
      "==> {x, y}\n"
     ]
    }
   ],
   "source": [
    "print(sweep_object)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To execute a sweep we simply iterate through it inside a for loop."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'x': 1, 'y': 0}\n",
      "{'x': 2, 'y': 2}\n",
      "{'x': 3, 'y': 4}\n",
      "{'x': 4, 'y': 6}\n",
      "{'x': 5, 'y': 8}\n"
     ]
    }
   ],
   "source": [
    "for data in sweep_object:\n",
    "    print(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Constructing a more complicated sweep.\n",
    "\n",
    "Going a little bit deeper, this example follows a more realistic use-case"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "def tune_something(param):\n",
    "    print(f'adjusting something in-situ using param={param}')\n",
    "\n",
    "@recording(\n",
    "    independent('frq', type='array', unit='Hz'), \n",
    "    dependent('phase', depends_on=['frq'], type='array', unit='rad')\n",
    ")\n",
    "def measure_frequency_trace(npoints=3):\n",
    "    return np.arange(1,npoints+1)*1e6, np.random.normal(size=npoints)\n",
    "\n",
    "\n",
    "@recording(dependent('temperature', unit='K'))\n",
    "def measure_temperature():\n",
    "    return np.random.normal(loc=0.1, scale=0.01)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(repetition, param, frq, phase(repetition, param, frq), temperature(repetition))\n",
      "\n"
     ]
    }
   ],
   "source": [
    "sweep = (\n",
    "    sweep_parameter('repetition', range(3))\n",
    "    @ (sweep_parameter('param', range(3), tune_something)\n",
    "       * measure_frequency_trace\n",
    "       + measure_temperature)\n",
    ")\n",
    "\n",
    "pprint(sweep.get_data_specs())\n",
    "print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "adjusting something in-situ using param=0\n",
      "{'repetition': 0, 'param': 0, 'frq': array([1000000., 2000000., 3000000.]), 'phase': array([-0.95051563,  0.39677113,  0.82798483]), 'temperature': None}\n",
      "adjusting something in-situ using param=1\n",
      "{'repetition': 0, 'param': 1, 'frq': array([1000000., 2000000., 3000000.]), 'phase': array([ 0.57891758, -0.44138767,  0.40250355]), 'temperature': None}\n",
      "adjusting something in-situ using param=2\n",
      "{'repetition': 0, 'param': 2, 'frq': array([1000000., 2000000., 3000000.]), 'phase': array([ 0.19347455, -0.89869758, -0.50722658]), 'temperature': None}\n",
      "{'repetition': 0, 'param': None, 'frq': None, 'phase': None, 'temperature': 0.09624945608152288}\n",
      "adjusting something in-situ using param=0\n",
      "{'repetition': 1, 'param': 0, 'frq': array([1000000., 2000000., 3000000.]), 'phase': array([ 0.32768119,  0.79986157, -0.4851257 ]), 'temperature': None}\n",
      "adjusting something in-situ using param=1\n",
      "{'repetition': 1, 'param': 1, 'frq': array([1000000., 2000000., 3000000.]), 'phase': array([ 0.79821246,  0.55601409, -1.64250091]), 'temperature': None}\n",
      "adjusting something in-situ using param=2\n",
      "{'repetition': 1, 'param': 2, 'frq': array([1000000., 2000000., 3000000.]), 'phase': array([-0.4339752 ,  1.03581369,  0.42389619]), 'temperature': None}\n",
      "{'repetition': 1, 'param': None, 'frq': None, 'phase': None, 'temperature': 0.11039824711033963}\n",
      "adjusting something in-situ using param=0\n",
      "{'repetition': 2, 'param': 0, 'frq': array([1000000., 2000000., 3000000.]), 'phase': array([-1.21174606, -1.24159865, -0.05330533]), 'temperature': None}\n",
      "adjusting something in-situ using param=1\n",
      "{'repetition': 2, 'param': 1, 'frq': array([1000000., 2000000., 3000000.]), 'phase': array([ 0.21372515,  0.13635877, -0.32121778]), 'temperature': None}\n",
      "adjusting something in-situ using param=2\n",
      "{'repetition': 2, 'param': 2, 'frq': array([1000000., 2000000., 3000000.]), 'phase': array([-0.46450743,  1.70461855,  0.95778301]), 'temperature': None}\n",
      "{'repetition': 2, 'param': None, 'frq': None, 'phase': None, 'temperature': 0.09687267860477546}\n"
     ]
    }
   ],
   "source": [
    "for data in sweep:\n",
    "    print(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "### Example using sweep and saving data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:qcodes]",
   "language": "python",
   "name": "conda-env-qcodes-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  },
  "toc-autonumbering": true
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
